version: 2.1
jobs:
  test-image:
    machine: true
    envirionment:
      - IMAGE: tuimac/openvpn
      - NAME: openvpn
      - PORT: 30000
      - CLIENTCERT: tuimac.ovpn
    steps:
      - checkout
      - run:
          name: Build images
          working_directory: builds
          command: docker build -t ${IMAGE} .
      - run:
          name: Start containers
          command: docker run -itd --name ${NAME} -v ${NAME}:/etc/openvpn -p ${PORT}:1194/udp -p ${PORT}:1194/tcp --cap-add NET_ADMIN --env-file env.list --network=bridge ${IMAGE}
      - run:
          name: Integration test - Get first certification
          working_directory: test
          command: |
            for i in {0..100}; do
              curl http://localhost:${PORT} -o ${CLIENTCERT};
              [[ $? -eq 0 ]] && break;
              sleep 3;
              [[ $i -eq 99 ]] && exit 1;
            done
      - run:
          name: Integration test - Connection
          working_directory: test
          command: |
            mv ${CLIENTCERT} test.ovpn
            docker build -t test .
            docker run -itd --name test --network bridge test
            sleep 2
            docker stop ${NAME} && docker start ${NAME}
            sleep 2
            docker ps -a | grep Exit
            [[ $? -eq 0 ]] && exit 1;
  push-image:
    machine: true
    steps:
      - run:
          name: Push Image
          working_directory: builds
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            curl https://raw.githubusercontent.com/tuimac/tools/master/cicd/scripts/install-buildx.sh | bash
            docker buildx build --platform linux/amd64,linux/arm64 -t ${IMAGE} --push .
  deploy-on-kubernetes:
    machine: true
    steps:
      - run:
          name: Create Kubernetes cluster
          working_directory: kubernetes
          command: |
            curl https://raw.githubusercontent.com/tuimac/tools/master/cicd/scripts/ubuntu-kube.sh | bash
            ALL=`kubectl get pods -A | wc -l`
            for i in {0..100}; do
              PENDING=`kubectl get pods --all-namespaces --field-selector status.phase=Pending | wc -l`
              [[ $All -eq $PENDING ]] && { echo 'All OK'; break; }
              sleep 3
            done
            mkdir -p /kubernetes/openvpn
      - run:
          name: Integration test - Get first certification
          working_directory: test
          command: |
            for i in {0..100}; do
              curl http://localhost:${PORT} -o ${CLIENTCERT};
              [[ $? -eq 0 ]] && break;
              sleep 3;
              [[ $i -eq 99 ]] && exit 1;
            done
      - run:
          name: Integration test - Connection
          working_directory: test
          command: |
            mv ${CLIENTCERT} test.ovpn
            docker build -t test .
            docker run -itd --name test --network bridge test
            sleep 2
            docker stop ${NAME} && docker start ${NAME}
            sleep 2
            docker ps -a | grep Exit
            [[ $? -eq 0 ]] && exit 1;
workflows:
  version: 2.1
  openvpn-pipeline:
    jobs:
      - test-image
      - push-image:
          requires:
            - test-image
          filters:
            branches:
              only: master
      - deploy-on-kubernetes:
          requires:
            - push-image
