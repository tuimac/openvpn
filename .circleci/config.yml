version: 2.1
jobs:
  BuildAndTest:
    machine:
      image: ubuntu-2204:current
    environment:
      - IMAGE_NAME: tuimac/openvpn
      - CONTAINER_NAME: openvpn
      - CONTAINER_PORT: 30000
      - CLIENTCERT: tuimac.ovpn
    steps:
      - checkout
      - run:
          name: Build images
          working_directory: docker
          command: docker build -t ${IMAGE_NAME} .
      - run:
          name: Start containers
          working_directory: builds
          command: |
            docker run -itd --name ${CONTAINER_NAME} \
              -v ${CONTAINER_NAME}:/etc/openvpn \
              -p ${CONTAINER_PORT}:1194/udp \
              -p ${CONTAINER_PORT}:1194/tcp \
              --cap-add NET_ADMIN \
              --env-file env.list \
              ${CONTAINER_IMAGE}
      - run:
          name: Integration test - Get first certification
          working_directory: test
          command: |
            set +e
            for i in {0..100}; do
              curl http://localhost:${CONTAINER_PORT} -o ${CLIENTCERT};
              [[ $? -eq 0 ]] && break;
              sleep 3;
              [[ $i -eq 99 ]] && exit 1;
            done
      - run:
          name: Integration test - Connection
          working_directory: test
          command: |
            mv ${CLIENTCERT} test.ovpn
            docker build -t test .
            docker run -itd --name test --network bridge test
            sleep 2
            docker stop ${CONTAINER_NAME} && docker start ${CONTAINER_NAME}
            sleep 2
            docker logs test
 push_image:
    machine:
      image: ubuntu-2204:current
    environment:
      - IMAGE_NAME: 'tuimac/openvpn'
      - DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
      - checkout
      - run:
          name: Login Docker Hub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Setup Docker Buildx
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker context create circleci
            docker buildx create --use circleci
      - run:
          name: Build and Push docker image
          command: |
            docker buildx build \
              --push \
              --platform linux/ppc64le,linux/s390x,linux/arm64,linux/amd64 \
              -t ${IMAGE_NAME} .
workflows:
  version: 2.1
  openvpn-pipeline:
    jobs:
      - BuildAndTest
      - PushImage:
          requires:
            - BuildAndTest
          filters:
            branches:
              only: main
